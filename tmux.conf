# $Id: vim-keys.conf,v 1.2 2010-09-18 09:36:15 nicm Exp $
#
# vim-keys.conf, v1.2 2010/09/12
#
# Originally by Daniel Thau.  Public domain.
# Modified by Jonathan Poltak Samosir
#
# This configuration file binds many vi- and vim-like bindings to the
# appropriate tmux key bindings.  Note that for many key bindings there is no
# tmux analogue.  This is intended for tmux 1.3, which handles pane selection
# differently from the previous versions

# move around panes with hjkl, as one would in vim after pressing ctrl-w
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# resize panes like vim
# feel free to change the "1" to however many lines you want to resize by, only
# one at a time can be slow
bind < resize-pane -L 3
bind > resize-pane -R 3
bind - resize-pane -D 3
bind + resize-pane -U 3

# vi-style controls for copy mode
setw -g mode-keys vi

# instant escape to copy-mode
set-option -sg escape-time 0

# maximise split clients with | button
bind-key | resize-pane -Z \; display-message "pane maximised (C-f | to restore)"

# window status
setw -g window-status-format "#[fg=magenta]#[bg=black] #I #[bg=cyan]#[fg=colour8] #W "
setw -g window-status-current-format "#[bg=brightmagenta]#[fg=colour8] #I #[fg=colour8]#[bg=colour14] #W "
setw -g window-status-current-bg colour0
setw -g window-status-current-fg colour11
setw -g window-status-current-attr dim
setw -g window-status-bg green
setw -g window-status-fg black
setw -g window-status-attr reverse

# status bar line
set -g status-justify left
set -g status-bg default
set -g status-fg colour12
set -g status-interval 60
set -g status-left ''

# info on status line
set -g status-right-length 75
set -g status-right '#[fg=brightblue]#H #[fg=colour7]| #[fg=brightred]#(uname -sr) #[fg=colour7]| #[fg=brightmagenta]#(getip en0) #[fg=colour7]| #{battery_icon} #{battery_percentage} | #[fg=brightyellow]%Y-%m-%d #[fg=colour7]| #[fg=brightgreen]%H:%M'
set -g automatic-rename on

# tmux messages get shown for 5 secs
 set -g display-time 5000

# screen mode
set -g default-terminal "screen-256color"

# window mode
setw -g mode-bg colour6
setw -g mode-fg colour0

# starts the tmux-MacOSX-pasteboard wrapper
set-option -g default-command "reattach-to-user-namespace -l $SHELL"

# makes new tmux panes start in current working directory
#bind s split-window -c "#{pane_current_path}"
#bind v split-window -h -c "#{pane_current_path}"
#bind c new-window -c "#{pane_current_path}"

# List of plugins
# # Supports `github_username/repo` or full git URLs
set -g @tpm_plugins "              \
  tmux-plugins/tpm                 \
  tmux-plugins/tmux-resurrect      \
  tmux-plugins/tmux-battery        \
"
# Other examples:
# github_username/plugin_name    \
# git@github.com/user/plugin     \
# git@bitbucket.com/user/plugin  \

# initializes TMUX plugin manager
run-shell ~/.tmux/plugins/tpm/tpm

# tmux-resurrect settings
set -g @resurrect-processes 'vim less man'

# set focus events for supported terms
set -g focus-events on

# rebind keys to navigate splits without leader key
# smart pane switching with awareness of vim splits
bind -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-h) || tmux select-pane -L"
bind -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-j) || tmux select-pane -D"
bind -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-k) || tmux select-pane -U"
bind -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-l) || tmux select-pane -R"

# Bind R to refresh tmux with current config
bind r source ~/.tmux.conf\; display "refreshed tmux.conf!"

# Make sure to prompt for window name on new window
bind-key c command-prompt -p "Name of new window: " "new-window -n '%%'"

